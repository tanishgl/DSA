import java.io.*;
import java.util.*;

public class Main{
  

public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();

    // code
    Stack<Integer> operands = new Stack<>();
    Stack<Character> operator = new Stack<>();
    
    for(int i=0;i<exp.length();i++){
        char ch = exp.charAt(i);
        
        if(ch == '('){
            operator.push(ch);
        } else if (ch >= '0' && ch <= '9'){
            operands.push(ch-'0');
        } else if (ch == ')'){
            while(operator.size()>0 && operator.peek() != '('){
                char op = operator.pop();
                int b = operands.pop();
                int a = operands.pop();
                int res = solve(a, op, b);
                operands.push(res);
            }
            // Pop '(' from operator.
            operator.pop();
        } else if (ch == '+' || ch == '-' || ch == '*' || ch == '/'){
            while(operator.size() > 0 && precedence(ch) <= precedence(operator.peek()) && operator.peek() != '('){
                char op = operator.pop();
                int b = operands.pop();
                int a = operands.pop();
                int res = solve(a, op, b);
                operands.push(res);
            }
            operator.push(ch);
        }
    }
    
    while(operator.size() > 0){
        char op = operator.pop();
        int b = operands.pop();
        int a = operands.pop();
        int res = solve(a, op, b);
        operands.push(res);
    }
    
    // System.out.println(operands);
    
    System.out.println(operands.peek());
 }
 
 public static int solve(int a, char op, int b){
     if(op == '+'){
         return a + b;
     } else if (op == '-'){
         return a - b;
     } else if (op == '*'){
         return a * b;
     } else if (op == '/'){
         return a / b;
     }
     return 0;
 }
 
 public static int precedence(char ch){
     if(ch == '+' || ch == '-'){
         return 1;
     } else if (ch == '*' || ch == '/'){
         return 2;
     }
     
     return -1;
 }
}
