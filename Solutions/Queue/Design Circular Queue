class MyCircularQueue {
    
    int size;
    int[] arr;
    int front, rear;

    public MyCircularQueue(int k) {
        arr = new int[k];
        size = 0;
        front = 0;
        rear = 0;
    }
    
    public boolean enQueue(int value) {
        if(size==arr.length){
            return false;
        }
        
        arr[rear] = value;
        size++;
        rear++;
        rear %= arr.length;
        //System.out.println(rear);
        return true;
    }
    
    public boolean deQueue() {
        if(size==0){
            return false;
        }
        
        front = (front+1) % arr.length;
        size--;
        return true;
    }
    
    public int Front() {
        if(size==0){
            return -1;
        }
        
        return arr[front];
    }
    
    public int Rear() {
        if(size==0){
            return -1;
        }
        
        if(rear-1==-1){
            return arr[arr.length-1];
        } else {
            return arr[rear-1];
        }
    }
    
    public boolean isEmpty() {
        return (size==0? true : false);
    }
    
    public boolean isFull() {
        return (size==arr.length? true : false);
    }
}
