class Solution {
    public int trap(int[] height) {
        int[] lm = leftmax(height);
        int[] rm = rightmax(height);
        int water = 0;
        for(int i=0;i<height.length;i++){
            water += (Math.min(lm[i],rm[i])-height[i]);
        }
        
        return water;
    }
    
    public static int[] leftmax(int[] arr){
        int[] ans = new int[arr.length];
        int max = -1;
        
        for(int i=0;i<arr.length;i++){
            max = Math.max(max,arr[i]);
            ans[i] = max;
        }
        
        return ans;
    }
    
    public static int[] rightmax(int[] arr){
        int[] ans = new int[arr.length];
        int max = -1;
        
        for(int i=arr.length-1;i>=0;i--){
            max = Math.max(max, arr[i]);
            ans[i] = max;
        }
        
        return ans;
    }
}
