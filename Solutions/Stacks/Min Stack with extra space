public static class MinStack {
    Stack<Integer> allData;
    Stack<Integer> minData;

    public MinStack() {
      allData = new Stack<>();
      minData = new Stack<>();
      minData.push(Integer.MAX_VALUE);
    }


    int size() {
      // write your code here  
      return allData.size();
    }

    void push(int val) {
      // write your code here
      allData.push(val);
      minData.push(Math.min(minData.peek(), val));
    }

    int pop() {
      // write your code here
      if(allData.size()==0){
        System.out.println("Stack underflow");
        return -1;
      }

      minData.pop();
      return allData.pop();
    }

    int top() {
      // write your code here
      if(allData.size()==0){
        System.out.println("Stack underflow");
        return -1;
      }
      return allData.peek();
    }

    int min(){
  	  // write your code here
      if(minData.size()==0){
        System.out.println("Stack underflow");
        return -1;
      }
      return minData.peek();
    }
  }
